#!/usr/bin/env python
# vim:fileencoding=utf-8:filetype=python



from os import system
from sys import argv, exit, stderr
from tmpfiles import TmpInput, TmpOutput, Tmp
from string import join


def main():

    '''
    locally cmd [arguments]

    does the following:
        * replace each argument starting with "in:" by a TmpInput
        * replace each argument starting with "out:" by a TmpOutput
        * execute the command line
        * move the outputs if the return code is zero
        * clean all temporary files
    '''

    stderr.write('Using locally for command: ' + join(argv[1:]) + '\n')
    arg = []
    tmpout = []
    for a in argv[1:]:
        if a.startswith('in:'):
            b = TmpInput(a[3:], verbose=True)
            arg.append(b)

        elif a.startswith('out:'):
            b = TmpOutput(a[4:], verbose=True)
            arg.append(b)
            tmpout.append(b)

        else:
            arg.append(a)


    # execute the command
    cmd = join(arg)
    stderr.write('Executing: ' + cmd + '\n')
    ret = system(cmd)

    # finish the temporary files
    for i in tmpout:
        if ret == 0:
            i.move()
    Tmp.cleanAll()

    if ret > 255: ret = 255 # values greater than 255 don't seem to be returned properly

    exit(ret)


if __name__ == '__main__':
    main()
